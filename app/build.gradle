apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.zx.projectmanage"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"
        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi", "armeabi-v7a"
        }

        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }

        dexOptions { //优化dex配置
            dexInProcess true
            preDexLibraries true
            javaMaxHeapSize "4g"
        }

        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
                jni.srcDirs = []    //disable automatic ndk-build
            }
        }

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    compileOptions {
        incremental = true  //开启增量编译
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            crunchPngs false //关闭crunchPng优化, 以加快构建
            minifyEnabled false
            buildConfigField "boolean", "RELEASE", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "RELEASE", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (!variant.buildType.debuggable) {
                outputFileName = "项目管理平台_" + getTime() + "_" + defaultConfig.versionName + ".apk"
            }
        }
    }
}

buildscript {
    repositories {
        jcenter()
    }
}

repositories {
    flatDir { dirs '../zxmap/libs' }
    flatDir { dirs 'libs' }
}

def getTime() {
    return new Date().format("yyMMdd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation project(':zxmvp')
    implementation project(':zxmap')
    implementation('com.github.StannyBing:ZXUtils:2.3.7') {
        exclude group: 'com.squareup.okhttp3'
    }
    implementation 'com.github.StannyBing:BingUIDemo:1.0.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.tencent.bugly:crashreport:3.0.0'
    implementation 'com.youth.banner:banner:2.1.0'
    implementation 'com.github.lygttpod:SuperTextView:2.4.2'
    implementation 'com.hyman:flowlayout-lib:1.1.2'
}
